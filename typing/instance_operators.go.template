package typing

#split

#def a Add: add, Sub: sub, Mul: mul, Div: div, Mod: mod, Pow: pow

func (o Instance) <a1>(other Object, first bool) (Object, Object) {
	if fun := o.getProp("_<a2>"); fun != nil {
		res := fun.(Callable).Call(o, map[string]Object{"other": other, "first": Bool{first}}, []Object{}, map[string]Object{}, o.File)
		if ret, ok := res.(Return); ok {
			return ret.Data, nil
		} else {
			return nil, res.TData()
		}
	}
	return nil, nil
}
